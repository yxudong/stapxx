#!/usr/bin/env stap++

/*
 * Copyright (C) Yichun Zhang (agentzh)
 */

global exec_begin
global stats

@define process_return %(
    if (exec_begin) {
        elapsed = gettimeofday_us() - exec_begin
        if (elapsed > 4) {
            stats <<< elapsed
        }
        exec_begin = 0
    }
%)

@define process_enter %(
    %( $^arg_from :default(0) != 0 && $^arg_to :default(0) != 0 %?
    size = $strm->avail_in
    if (size >= $^arg_from && size <= $^arg_to) {
        exec_begin = gettimeofday_us()
    } else {
        exec_begin = 0
    }
    %:
    exec_begin = gettimeofday_us()
    %)
%)

probe @pfunc(deflate)!,
      process("$^libz_path").function("deflate")
{
    //warn("HERE")
    @process_enter
}

probe @pfunc(deflateEnd)!,
      process("$^libz_path").function("deflateEnd")
{
    //warn("HERE")
    @process_enter
}


probe @pfunc(deflate).return!,
      process("$^libz_path").function("deflate").return
{
    @process_return
}

probe @pfunc(deflateEnd).return!,
      process("$^libz_path").function("deflateEnd").return
{
    @process_return
}

probe begin {
    printf("Start tracing process %d ($^exec_path)...\n", target())
    %( "$^arg_time :default()" != ""  %?
    printf("Please wait for $^arg_time seconds...\n")
    %:
    printf("Hit Ctrl-C to end.\n")
    %)
}

%( "$^arg_time" != ""  %?
probe timer.s($^arg_time) {
    exit()
}
%)

probe end {
    count = @count(stats)
    if (count == 0) {
        printf("\nNo samples found so far.\n")

    } else {
        printf("\nDistribution of zlib deflate time (in microseconds) for %d samples:\n",
               count)
        printf("(min/avg/max: %d/%d/%d)\n", @min(stats), @avg(stats),
               @max(stats))
        print(@hist_log(stats))
    }
}
